<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>索引失效- like条件 左边有% 导致索引失效</title>
      <link href="posts/a7b038eb.html"/>
      <url>posts/a7b038eb.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>LIKE 语句不允许使用 % 开头，否则索引会失效；</p><p>当真的需要两边都使用%来模糊查询时，<br>当这个作为模糊查询的条件字段（例子中的name）以及所想要查询出来的数据字段（例子中的 id &amp; name）都有索引列时，才能真正使用索引，否则，索引失效全表扫描（比如多了一个 salary 字段）</p><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220308003059037.png" alt="image-20220308003059037" style="zoom:50%;"><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220308003350612.png" alt="image-20220308003350612" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql生成百万数据</title>
      <link href="posts/e6bde92c.html"/>
      <url>posts/e6bde92c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>mysql 如何快速生成百万测试数据<br>实现思路</p><p>1、创建内存表和普通表</p><p>2、创建函数及存储过程</p><p>创建生成n个随机数字的函数<br>创建生成号码函数<br>创建随机字符串函数<br>创建插入内存表数据的存储过程<br>创建内存表数据插入普通表的存储过程<br>3、调用存储过程插入数据</p><p>修改mysql内存表存储大小的值<br>调用我写的另一个存储过程：add_test_user_memory_to_outside<br>实现思路<br>在我们平时工作或学习的过程中，有时需要在数据库中生成大量的测试数据，这个时候，我们可以利用mysql内存表插入速度快的特点，先利用函数和存储过程在内存表中生成数据，然后再从内存表插入普通表中。经过我的测试，这种方案插入数据是非常快的。</p><p>下面是实现步骤。</p><h3 id="一、创建内存表和普通表"><a href="#一、创建内存表和普通表" class="headerlink" title="一、创建内存表和普通表"></a><strong>一、创建内存表和普通表</strong></h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#创建内存表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>test_user_memory<span class="token punctuation">`</span> <span class="token punctuation">(</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">comment</span> <span class="token string">'主键id'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>user_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">comment</span> <span class="token string">'用户id'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>user_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'用户名称'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'手机号码'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>lan_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'本地网'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>region_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'区域'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>create_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">KEY</span> <span class="token punctuation">`</span>idx_user_id<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>user_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span>MEMORY <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span><span class="token keyword">engine</span><span class="token operator">=</span>memory是指这张表作为一张内存表<span class="token punctuation">.</span>内存表的特点是读写快<span class="token punctuation">,</span>但重启后会清空<span class="token punctuation">.</span>并且对字段大小和类型有要求<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#创建普通表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>test_user<span class="token punctuation">`</span> <span class="token punctuation">(</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">comment</span> <span class="token string">'主键id'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>user_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">comment</span> <span class="token string">'用户id'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>user_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'用户名称'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'手机号码'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>lan_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'本地网'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>region_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'区域'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>create_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">comment</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">KEY</span> <span class="token punctuation">`</span>idx_user_id<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>user_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、创建函数及存储过程<br>创建生成n个随机数字的函数<br>生成手机号码的时候要用到</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#生成n个随机数字</span><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> randNum<span class="token punctuation">(</span>n <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span>    <span class="token keyword">DECLARE</span> chars_str <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0123456789'</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> return_str <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">WHILE</span> i <span class="token operator">&lt;</span> n <span class="token keyword">DO</span>        <span class="token keyword">SET</span> return_str <span class="token operator">=</span> concat<span class="token punctuation">(</span>return_str<span class="token punctuation">,</span>substring<span class="token punctuation">(</span>chars_str <span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span>    <span class="token keyword">RETURN</span> return_str<span class="token punctuation">;</span><span class="token keyword">END</span> $$<span class="token keyword">DELIMITER</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">创建生成号码函数<span class="token comment">#生成随机手机号码</span><span class="token comment"># 定义常用的手机头 130 131 132 133 134 135 136 137 138 139 186 187 189 151 157</span><span class="token comment">#SET starts = 1+floor(rand()*15)*4;   截取字符串的开始是从 1、5、9、13 ...开始的。floor(rand()*15)的取值范围是0~14</span><span class="token comment">#SET head = substring(bodys,starts,3);在字符串bodys中从starts位置截取三位</span><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> generatePhone<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> head <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">DECLARE</span> phone <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">DECLARE</span> bodys <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">"130 131 132 133 134 135 136 137 138 139 186 187 189 151 157"</span><span class="token punctuation">;</span><span class="token keyword">DECLARE</span> starts <span class="token keyword">int</span><span class="token punctuation">;</span><span class="token keyword">SET</span> starts <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">+</span>floor<span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>  <span class="token keyword">SET</span> head <span class="token operator">=</span> trim<span class="token punctuation">(</span>substring<span class="token punctuation">(</span>bodys<span class="token punctuation">,</span>starts<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">SET</span> phone <span class="token operator">=</span> trim<span class="token punctuation">(</span>concat<span class="token punctuation">(</span>head<span class="token punctuation">,</span>randNum<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">RETURN</span> phone<span class="token punctuation">;</span><span class="token keyword">END</span> $$<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建随机字符串函数</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#创建随机字符串和随机时间的函数</span><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> <span class="token punctuation">`</span>randStr<span class="token punctuation">`</span><span class="token punctuation">(</span>n <span class="token keyword">INT</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">CHARSET</span> utf8mb4<span class="token keyword">DETERMINISTIC</span><span class="token keyword">BEGIN</span> <span class="token keyword">DECLARE</span> chars_str <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span> <span class="token keyword">DECLARE</span> return_str <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token punctuation">;</span> <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">WHILE</span> i <span class="token operator">&lt;</span> n <span class="token keyword">DO</span>  <span class="token keyword">SET</span> return_str <span class="token operator">=</span> concat<span class="token punctuation">(</span>return_str<span class="token punctuation">,</span> substring<span class="token punctuation">(</span>chars_str<span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> RAND<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span> <span class="token keyword">RETURN</span> return_str<span class="token punctuation">;</span> <span class="token keyword">END</span>$$ <span class="token keyword">DELIMITER</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建插入内存表数据的存储过程</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># 创建插入内存表数据存储过程   入参n是多少就插入多少条数据</span><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> <span class="token punctuation">`</span>add_test_user_memory<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token operator">IN</span> n <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">BEGIN</span> <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">WHILE</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span> <span class="token keyword">DO</span>  <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> test_user_memory <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> user_name<span class="token punctuation">,</span> phone<span class="token punctuation">,</span> lan_id<span class="token punctuation">,</span>region_id<span class="token punctuation">,</span> create_time<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> randStr<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> generatePhone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span> <span class="token keyword">END</span> $$ <span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建内存表数据插入普通表存储过程<br>此处利用对内存表的循环插入和删除来实现批量生成数据，这样可以不需要更改mysql默认的max_heap_table_size值也照样可以生成百万或者千万的数据。<br>max_heap_table_size默认值是16M。<br>max_heap_table_size的作用是配置用户创建内存临时表的大小，配置的值越大，能存进内存表的数据就越多。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#循环从内存表获取数据插入普通表</span><span class="token comment">#参数描述 n表示循环调用几次；count表示每次插入内存表和普通表的数据量</span> <span class="token keyword">DELIMITER</span> $$ <span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> <span class="token punctuation">`</span>add_test_user_memory_to_outside<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token operator">IN</span> n <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token operator">IN</span> count <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">BEGIN</span> <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">WHILE</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span> <span class="token keyword">DO</span>  <span class="token keyword">CALL</span> add_test_user_memory<span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> test_user <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> test_user_memory<span class="token punctuation">;</span> <span class="token keyword">delete</span> <span class="token keyword">from</span> test_user_memory<span class="token punctuation">;</span> <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span> <span class="token keyword">END</span> $$ <span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、调用存储过程插入数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#先调用存储过程往内存表插入一万条数据，然后再把内存表的一万条数据插入普通表</span><span class="token keyword">CALL</span> add_test_user_memory<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#一次性把内存表的数据插入到普通表，这个过程是很快的</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> test_user <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> test_user_memory<span class="token punctuation">;</span><span class="token comment">#清空内存表数据</span><span class="token keyword">delete</span> <span class="token keyword">from</span> test_user_memory<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先简单测试一下插入内存表一万条数据要花多少时间<br><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/640" alt="图片"><br>把内存表的一万条数据一次性插入普通表，只需要很短的时间就完成了，如下图所示<br><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220307200605048.png" alt="image-20220307200605048"><br>查询刚刚插入的普通表的数据<br><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220307200624452.png" alt="image-20220307200624452"><br>因为我没有更改数据库内存表内存大小，所以单次插入内存表一万条数据是没问题的，但是单次插入内存表十万条数据就不行了，会报内存表已满的异常。如下图所示<br><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220307200638920.png" alt="image-20220307200638920"></p><p>如果想调用一次存储过程插入普通表十万或百万的数据要如何实现呢？这里有两种方案</p><h3 id="修改mysql内存表存储大小的值"><a href="#修改mysql内存表存储大小的值" class="headerlink" title="修改mysql内存表存储大小的值"></a><strong>修改mysql内存表存储大小的值</strong></h3><p>1、通过执行mysql命令修改</p><blockquote><p>SET GLOBAL tmp_table_size=2147483648;<br>SET GLOBAL max_heap_table_size=2147483648;</p></blockquote><p>2、通过修改mysql配置文件</p><blockquote><p>vi /etc/my.cnf<br>[mysqld]<br>max_heap_table_size = 2048M<br>tmp_table_size = 2048M</p></blockquote><p>可以通过下面的方式查看内存表存储大小</p><p><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220307200655732.png" alt="image-20220307200655732"></p><h3 id="二、调用另一个存储过程"><a href="#二、调用另一个存储过程" class="headerlink" title="二、调用另一个存储过程"></a><strong>二、调用另一个存储过程</strong></h3><p><strong>add_test_user_memory_to_outside</strong></p><p>这个存储过程就是通过不断循环插入内存表，再从内存表获取数据插入普通表，最后删除内存表，以此循环直至循环结束。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#循环100次，每次生成10000条数据 总共生成一百万条数据</span><span class="token keyword">CALL</span> add_test_user_memory_to_outside<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220307200708438.png" alt="image-20220307200708438"></p><p>一百万数据</p><p><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220307200719612.png" alt="image-20220307200719612"></p><h3 id="三、创建存储过程中遇见问题"><a href="#三、创建存储过程中遇见问题" class="headerlink" title="三、创建存储过程中遇见问题"></a><strong>三、创建存储过程中遇见问题</strong></h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">[Err] 1418 - This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解决方法<br>1.在mysql数据库中执行以下语句 （临时生效，重启后失效）</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> <span class="token keyword">global</span> log_bin_trust_function_creators<span class="token operator">=</span><span class="token boolean">TRUE</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> <span class="token keyword">global</span> log_bin_trust_function_creators<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>在配置文件/etc/my.cnf的[mysqld]或者my-default.ini文件中配置log_bin_trust_function_creators=1</li></ol><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220307201714290.png" alt="image-20220307201714290" style="zoom:50%;"><p>3.创建时添加红色的文字部分</p><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220307201740225.png" alt="image-20220307201740225" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> 百万数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引</title>
      <link href="posts/df9a61f7.html"/>
      <url>posts/df9a61f7.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">//查看是否开启慢查询日志mysql&gt; show variables like '%slow%';//临时开启慢查询日志mysql&gt; set global slow_query_log=ON;//查看是否开启慢查询日志mysql&gt; show variables like '%slow%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://s2.loli.net/2021/12/09/fwPZlWOrFYVzTec.png" alt="image-20211209182625003" style="zoom:50%;"><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">//查询超过多少时间就可以记录，上面是如果超过10秒就要记录mysql&gt; show variables like '%long%';//改成一秒，如果超过一秒就写到慢日志里面去(一般一秒是最好的)mysql&gt; set long_query_time=1;//查看日记存储方式，默认FILEmysql&gt; show variables like '%log_output%';// 慢查询日志文件所在位置mysql&gt; show variables like '%datadir%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://s2.loli.net/2021/12/09/8kW6yugItAz9CXn.png" alt="image-20211209182934759" style="zoom:50%;"><img src="https://s2.loli.net/2021/12/09/tYS6sOv2Tu9wkHE.png" alt="image-20211209183824227" style="zoom:50%;"><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">//响应时间是3秒，超过了原先设定的一秒mysql&gt; select sleep(3);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="https://s2.loli.net/2021/12/09/YFsLu2MrX6eVtPn.png" alt="image-20211209183727209" style="zoom:50%;"><img src="https://s2.loli.net/2021/12/09/hLDWzBHZgIVmEA6.png" alt="image-20211209183952592" style="zoom: 50%;"><p>创建数据库</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> employee<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>sex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">'性别'</span><span class="token punctuation">,</span>salary <span class="token keyword">int</span> <span class="token keyword">comment</span> <span class="token string">'薪资（元）'</span><span class="token punctuation">,</span>dept <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">'部门'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">,</span> <span class="token string">'部门A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'李洁'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token number">4500</span><span class="token punctuation">,</span> <span class="token string">'部门C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'李小梅'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token number">4200</span><span class="token punctuation">,</span> <span class="token string">'部门A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'欧阳辉'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">7500</span><span class="token punctuation">,</span> <span class="token string">'部门C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'李芳'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token number">8500</span><span class="token punctuation">,</span> <span class="token string">'部门A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'张江'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">6800</span><span class="token punctuation">,</span> <span class="token string">'部门A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">12000</span><span class="token punctuation">,</span> <span class="token string">'部门B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">3500</span><span class="token punctuation">,</span> <span class="token string">'部门B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'马小龙'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">,</span> <span class="token string">'部门A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'龙五'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">,</span> <span class="token string">'部门B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'冯小芳'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">'部门C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'马小花'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">,</span> <span class="token string">'部门B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> employee<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> dept<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'柳峰'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">8800</span><span class="token punctuation">,</span> <span class="token string">'部门A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">查询表的默认索引mysql&gt; show index from employee\G; //主键会默认建一个id索引//查询分析mysql&gt; explain select * from employee where name='柳峰';//创建普通索引mysql&gt; create index idx_name on employee(name);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="C:/Users/lzw/AppData/Roaming/Typora/typora-user-images/image-20211209203038604.png" alt="image-20211209203038604" style="zoom:50%;"><pre class="line-numbers language-none"><code class="language-none">//查的时候可以看到一个主键索引mysql&gt; show index from employee\G;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="https://s2.loli.net/2021/12/09/XEm1PpHVcwsoKfJ.png" alt="image-20211209203614940" style="zoom:50%;"><pre class="line-numbers language-none"><code class="language-none">创建索引create index idx_name_salary_dept on employee(name,salary,dept);//查询分析explain select * from employee where name ='柳峰'\G;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://s2.loli.net/2021/12/09/9iELo76UX3KJ8M1.png" alt="image-20211209203935423" style="zoom:50%;"><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">验证有name就能索引// name和salarymysql&gt; explain select * from employee where name ='柳峰' and salary=8800\G;//name和deptmysql&gt; explain select * from employee where name ='柳峰' and dept='部门A'\G;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="覆盖索引"><a href="#覆盖索引" class="headerlink" title="覆盖索引"></a>覆盖索引</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">查看表的索引情况show index from employee;mysql&gt; explain select id from employee  employee where id=11\G;mysql&gt; explain select id from employee\G;//查name,salarymysql&gt; explain select name,salary from employee;//查name,salary,deptmysql&gt; explain select name,salary,dept from employee;//因为没有sxe条件，所以只能做全部扫描type为nullmysql&gt; explain select name,sex,salary,dept from employee;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：</p><p>首先开启慢查询日志</p><p>再设置sql超过多少时间会被写到日志中</p><p>使用explain(查询分析器)进行sql优化</p><p>比较重要的字段有:</p><ul><li>select_type : 查询类型，有简单查询、联合查询、子查询等</li><li>key : 使用的索引</li><li>rows : 扫描的行数</li></ul><p>使用索引</p><p>索引：</p><p>索引底层的数据结构是B+树的结构，</p><p>什么是树</p><img src="https://s2.loli.net/2021/12/10/rp15GskCc4uaoHL.png" style="zoom: 33%;"><p>子节点有多个前驱的都不是树</p><img src="https://s2.loli.net/2021/12/10/JvI7ibSKcYVekg2.png" alt="image-20211210155715372" style="zoom:33%;">]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql8.0时区</title>
      <link href="posts/29a1f0ab.html"/>
      <url>posts/29a1f0ab.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Typora+PicGo配置Gitee图床</title>
      <link href="posts/35b4fd03.html"/>
      <url>posts/35b4fd03.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>Typora+PicGo配置Gitee图床</strong></p><p>[(22条消息) 使用Typora+PicGo配置Gitee图床_清菡的博客-CSDN博客](<a href="https://blog.csdn.net/weixin_41033105/article/details/108502494?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=typora">https://blog.csdn.net/weixin_41033105/article/details/108502494?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=typora</a> picgo gitee&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<del>all</del>sobaiduweb~default-3-108502494.pc_search_result_positive&amp;spm=1018.2226.3001.4187)</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea文件修改父目录高亮</title>
      <link href="posts/a9d943e2.html"/>
      <url>posts/a9d943e2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://gitee.com/thunder-noon-lll/drawing-bed/raw/master/img/image-20220226201531850.png" alt="image-20220226201531850"></p>]]></content>
      
      
      <categories>
          
          <category> idea的使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式ID</title>
      <link href="posts/90055678.html"/>
      <url>posts/90055678.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>传统单体架构：（它的ID一般都设置为主键自增，AUTO_INCREMENT=1设置自增起始值）</p><p>但是在分布式服务架构（会有多个数据库或者多个表存储相同的业务数据）</p><p>在这种情况下，数据库的自增ID就会出现产生相同ID，破坏了主键的唯一性</p><p>解决思路</p><p>一：从数据库上解决：我们可以在不同的库上的表中设置不同的起始值和步长</p><p>但是要考虑数据库的可用性和服务的容错性</p><p>二：使用算法生成的ID代替主键，比如生成的ID要根据时间戳和机器的ID和序列数等等条件去生成唯一的ID，但是要考虑到时间回拨的问题，还要做缓冲的设计提高性能。</p><p>从数据库方面</p><p>方案一：</p><p>数据库生成ID给每张相同业务的表的主键字段</p><p>设置不同的<code>auto_increment_increment</code>（起始值）和<code>auto_increment_offset</code>（步长）来保证ID自增</p><p>避免出现主键冲突的问题</p><p>方案二：</p><p>redis 使用INCR (Redis Incr 命令将 key 中储存的数字值增一)</p><p>和INCRBY (Redis Incrby 命令将 key 中储存的数字加上指定的增量值。)</p><p>使用算法生成的ID</p><p>UUID</p><p>优点：无网络消耗，方便</p><p>缺点：不容易存储，位数太多，其它应用场景少</p><p>信息不安全（会暴露Mac地址）</p><p>对索引不利</p><p>Snowflake（雪花算法）</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
